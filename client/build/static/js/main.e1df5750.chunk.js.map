{"version":3,"sources":["reportWebVitals.js","components/navbar.js","sites/home.js","sites/account.js","sites/settings.js","sites/login.js","sites/register.js","sites/races.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","doLogout","location","username","accountPrompt","accountHref","accountOptions","localStorage","clear","push","NavDropdown","Item","href","getItem","Divider","Navbar","bg","expand","Container","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","disabled","title","Home","document","search","Carousel","src","alt","Caption","Accordion","defaultActiveKey","eventKey","Body","variant","fixed","settings","require","Account","useState","undefined","content","setContent","serverDomain","serverPort","user","useParams","useEffect","a","fetch","method","headers","response","json","fetchedSettings","fetchSettings","Card","Img","avatar","Title","Text","description","saveSettings","getElementById","value","sessionToken","body","JSON","stringify","rawResponse","success","alert","removeItem","window","replace","siteDomain","addCredits","balance","test","Settings","Form","Label","htmlFor","InputGroup","FormControl","placeholder","aria-label","aria-describedby","defaultValue","details","Group","controlId","Control","as","rows","url","Button","onClick","sendLogin","password","setItem","sessionKey","Login","onSubmit","e","preventDefault","console","log","type","createAccount","email","passwordAlt","includes","message","Register","createMatch","price","toString","joinMatch","Races","listOfMatches","auth","setAuth","i","startMatch","owner","matchId","participators","x","players","length","name","show","setShow","handleClose","Modal","onHide","closeButton","Footer","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"oVAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,uDC2CCQ,MA7Cf,SAAgBC,GAEZ,IAAMC,EAAWD,EAAME,SACnBC,EAAWH,EAAMG,SAEjBC,EAAgB,YAChBC,EAAc,cACdC,EAAiB,GAkBrB,MAhBgB,eAAbL,IACCM,aAAaC,QACbL,EAAW,IAGE,KAAbA,GACAA,EAAW,OACXC,EAAgB,YAChBC,EAAc,UAEdC,EAAeG,KAAK,qCAAE,cAACC,EAAA,EAAYC,KAAb,CAAkBC,KAAM,SAAWL,aAAaM,QAAQ,YAAxD,oBAClB,cAACH,EAAA,EAAYC,KAAb,CAAkBC,KAAK,oBAAvB,2BACA,cAACF,EAAA,EAAYC,KAAb,CAAkBC,KAAK,SAAvB,iCACA,cAACF,EAAA,EAAYI,QAAb,QAIJ,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACI,eAACC,EAAA,EAAD,WACI,cAACH,EAAA,EAAOI,MAAR,CAAcP,KAAK,IAAnB,4BACA,cAACG,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,SACI,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,cAACD,EAAA,EAAIE,KAAL,CAAUd,KAAK,IAAf,kBACA,cAACY,EAAA,EAAIE,KAAL,CAAUd,KAAK,IAAIe,UAAQ,EAA3B,uBACA,eAACjB,EAAA,EAAD,CAAakB,MAAOzB,EAAUoB,GAAG,qBAAjC,UACKjB,EACD,cAACI,EAAA,EAAYC,KAAb,CAAkBC,KAAMP,EAAxB,SAAsCD,kB,QCgCnDyB,MAnEf,WACE,IAAI1B,EAAWI,aAAaM,QAAQ,YAIpC,OAHiB,OAAbV,IACFA,EAAW,IAGX,sBAAKsB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQtB,SAAUA,EAAUD,SAAU4B,SAAS5B,SAAS6B,SACxD,qBAAKN,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,eAACO,EAAA,EAAD,WACE,eAACA,EAAA,EAASrB,KAAV,WACE,qBACEc,UAAU,gBACVQ,IAAI,8BACJC,IAAI,gBAEN,cAACF,EAAA,EAASG,QAAV,UACE,6FAGJ,eAACH,EAAA,EAASrB,KAAV,WACE,qBACEc,UAAU,gBACVQ,IAAI,8BACJC,IAAI,iBAEN,cAACF,EAAA,EAASG,QAAV,UACE,2DAGJ,eAACH,EAAA,EAASrB,KAAV,WACE,qBACEc,UAAU,gBACVQ,IAAI,8BACJC,IAAI,gBAEN,cAACF,EAAA,EAASG,QAAV,UACE,uEAIN,eAACC,EAAA,EAAD,CAAWC,iBAAiB,IAA5B,UACE,eAACD,EAAA,EAAUzB,KAAX,CAAgB2B,SAAS,IAAzB,UACE,cAACF,EAAA,EAAUrC,OAAX,wBACA,eAACqC,EAAA,EAAUG,KAAX,2IAC+H,uBAD/H,2OAIF,eAACH,EAAA,EAAUzB,KAAX,CAAgB2B,SAAS,IAAzB,UACE,cAACF,EAAA,EAAUrC,OAAX,0BACA,cAACqC,EAAA,EAAUG,KAAX,iVAKJ,cAACxB,EAAA,EAAD,CAAQE,OAAO,KAAKuB,QAAQ,QAAQxB,GAAG,QAAQyB,MAAM,SAArD,SACE,cAACvB,EAAA,EAAD,UACE,cAACH,EAAA,EAAOI,MAAR,CAAcP,KAAK,IAAnB,yC,iDC1DR8B,EAAWC,EAAQ,IA8CVC,MA5Cf,SAAiB5C,GAEb,IAAMG,EAAWI,aAAaM,QAAQ,aAAe,GAFjC,EAIUgC,wBAASC,GAJnB,mBAIbC,EAJa,KAIJC,EAJI,KAMdC,EAAeP,EAASO,aACxBC,EAAaR,EAASQ,WACpBC,EAASC,cAATD,KAgBR,OAdAE,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,sEAC2BC,MAAM,GAAD,OAAIN,EAAJ,iBAAyBE,GAAQ,CACzDK,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAJ5B,cACUC,EADV,gBAOkCA,EAASC,KAAKD,GAPhD,OAOUE,EAPV,OAQIZ,EAAWY,GARf,4CADY,uBAAC,WAAD,wBAWZC,KACD,CAACZ,EAAcC,EAAYC,IAG1B,qCACI,cAAC,EAAD,CAAQhD,SAAUA,IAClB,qBAAKsB,UAAU,YAAf,SACI,qBAAKA,UAAU,oBAAf,SACI,eAACqC,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,IAAN,CAAUvB,QAAQ,MAAMP,IAAKc,EAAUA,EAAQiB,OAAS,+BACxD,eAACF,EAAA,EAAKvB,KAAN,WACI,eAACuB,EAAA,EAAKG,MAAN,eAAclB,EAAUA,EAAQ5C,SAAW,MAC3C,cAAC2D,EAAA,EAAKI,KAAN,UACKnB,EAAUA,EAAQoB,YAAc,mB,+BCnC3DzB,EAAWC,EAAQ,IAEzB,SAASyB,IACL,IAAMD,EAAcrC,SAASuC,eAAe,qBAAqBC,MAC3DN,EAASlC,SAASuC,eAAe,aAAaC,MAC9CC,EAAehE,aAAaM,QAAQ,gBAE1C,sBAAC,4BAAAyC,EAAA,sEAC6BC,MAAM,GAAD,OAAIb,EAASO,aAAb,iBAA0C,CACrEO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBe,KAAMC,KAAKC,UAAU,CACjB,aAAgBH,EAChB,YAAeJ,EACf,UAAaH,MATxB,cACSW,EADT,gBAYyBA,EAAYhB,OAZrC,cAceiB,SACRC,MAAM,0CACNtE,aAAauE,WAAW,WACxBC,OAAO7E,SAAS8E,QAAhB,UAA2BtC,EAASuC,WAApC,uBAEAJ,MAAM,yCAnBb,0CAAD,GAwBJ,SAASK,IACL,IAAMC,EAAUrD,SAASuC,eAAe,iBAAiBC,MACnDC,EAAehE,aAAaM,QAAQ,gBAE1B,QAAQuE,KAAKD,GAM7B,sBAAC,4BAAA7B,EAAA,sEAC6BC,MAAM,GAAD,OAAIb,EAASO,aAAb,iBAA0C,CACrEO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBe,KAAMC,KAAKC,UAAU,CACjB,aAAgBH,EAChB,QAAWY,MARtB,cACSR,EADT,gBAWyBA,EAAYhB,OAXrC,cAaeiB,SACRC,MAAM,yBACNtE,aAAauE,WAAW,WACxBC,OAAO7E,SAAS8E,QAAhB,UAA2BtC,EAASuC,WAApC,uBAEAJ,MAAM,yCAlBb,0CAAD,GAJIA,MAAM,sCA0FCQ,MA/Df,WACI,IAAMlF,EAAWI,aAAaM,QAAQ,aAAe,GADrC,EAGcgC,wBAASC,GAHvB,mBAGTC,EAHS,KAGAC,EAHA,KAKVC,EAAeP,EAASO,aACxBC,EAAaR,EAASQ,WACtBqB,EAAehE,aAAaM,QAAQ,gBAgB1C,OAdAwC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,sEAC2BC,MAAM,GAAD,OAAIN,EAAJ,sCAA8CsB,GAAgB,CACtFf,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAJ5B,cACUC,EADV,gBAOkCA,EAASC,KAAKD,GAPhD,OAOUE,EAPV,OAQIZ,EAAWY,GARf,4CADY,uBAAC,WAAD,wBAWZC,KACD,CAACZ,EAAcC,EAAYqB,IAG1B,qCACI,cAAC,EAAD,CAAQpE,SAAUA,IAClB,qBAAKsB,UAAU,YAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,cAAC6D,EAAA,EAAKC,MAAN,CAAYC,QAAQ,YAApB,SAAgC,6BAAI,kDACpC,cAAC9E,EAAA,EAAYI,QAAb,IACA,cAACwE,EAAA,EAAKC,MAAN,CAAYC,QAAQ,YAApB,6BACA,cAACC,EAAA,EAAD,CAAYhE,UAAU,OAAtB,SACI,cAACiE,EAAA,EAAD,CACIC,YAAY,aACZC,aAAW,WACXC,mBAAiB,eACjBC,aAAc/C,EAAUA,EAAQgD,QAAQ5F,SAAW,GACnDwB,UAAQ,MAGhB,eAAC2D,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,+BAAvC,UACI,cAACX,EAAA,EAAKC,MAAN,kCACA,cAACD,EAAA,EAAKY,QAAN,CAAcC,GAAG,WAAWC,KAAM,EAAGT,YAAY,4BAA4BpE,GAAG,oBAAoBuE,aAAc/C,EAAUA,EAAQgD,QAAQ5B,YAAc,QAE9J,eAACmB,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,+BAAvC,UACI,cAACX,EAAA,EAAKC,MAAN,6BACA,cAACD,EAAA,EAAKY,QAAN,CAAcE,KAAM,EAAGT,YAAY,kCAAkCpE,GAAG,YAAYuE,aAAc/C,EAAUA,EAAQgD,QAAQM,IAAM,QAEtI,cAACC,EAAA,EAAD,CAAQ9D,QAAQ,OAAO+D,QAASnC,EAAhC,uBACA,cAAC1D,EAAA,EAAYI,QAAb,IACA,cAACwE,EAAA,EAAKC,MAAN,UAAY,6BAAI,6CAChB,eAACE,EAAA,EAAWvB,KAAZ,wBAA4BnB,EAAUA,EAAQgD,QAAQZ,QAAU,MAChE,eAACM,EAAA,EAAD,CAAYhE,UAAU,OAAtB,UACI,cAACgE,EAAA,EAAWvB,KAAZ,gBACA,cAACwB,EAAA,EAAD,CAAaE,aAAW,kDAAkDrE,GAAG,kBAC7E,cAAC+E,EAAA,EAAD,CAAQ9D,QAAQ,OAAO+D,QAASrB,EAAhC,kCC3HlBxC,EAAWC,EAAQ,IAEzB,SAAS6D,IACL,IAAMrG,EAAW2B,SAASuC,eAAe,kBAAkBC,MACrDmC,EAAW3E,SAASuC,eAAe,kBAAkBC,MAE1C,KAAbnE,GACA0E,MAAM,yCAGV,sBAAC,8BAAAvB,EAAA,sEAC6BC,MAAM,GAAD,OAAIb,EAASO,aAAb,UAAmC,CAC9DO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBe,KAAMC,KAAKC,UAAU,CACjB,SAAYvE,EACZ,SAAYsG,MARvB,cACS9B,EADT,gBAWyBA,EAAYhB,OAXrC,cAWSZ,EAXT,QAae6B,SACRC,MAAM,0CACNtE,aAAaC,QAEbD,aAAamG,QAAQ,eAAgB3D,EAAQ4D,YAC7CpG,aAAamG,QAAQ,WAAYvG,GACjC4E,OAAO7E,SAAS8E,QAAhB,UAA2BtC,EAASuC,WAApC,OAEAJ,MAAM,yCArBb,6DAAD,GAmEW+B,MAvCf,WAEI,IAAIzG,EAAWI,aAAaM,QAAQ,YASpC,OARiB,OAAbV,IACAA,EAAW,IAQX,qCACI,cAAC,EAAD,CAAQA,SAAUA,IAClB,qBAAKsB,UAAU,YAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,eAAC6D,EAAA,EAAD,CAAMuB,SAVH,SAACC,GAChBA,EAAEC,iBACFC,QAAQC,IAAI,uBAQA,UACI,eAAC3B,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,iBAAvC,UACI,cAACX,EAAA,EAAKC,MAAN,yBACA,cAACD,EAAA,EAAKY,QAAN,CAAcgB,KAAK,WAAWvB,YAAY,YAAYpE,GAAG,sBAG7D,eAAC+D,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,oBAAvC,UACI,cAACX,EAAA,EAAKC,MAAN,uBACA,cAACD,EAAA,EAAKY,QAAN,CAAcgB,KAAK,WAAWvB,YAAY,WAAWpE,GAAG,sBAE5D,cAAC+D,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,sBAEvC,cAACK,EAAA,EAAD,CAAQ9D,QAAQ,UAAU0E,KAAK,SAASX,QAASC,EAAjD,mBAGA,2EAA6C,mBAAG5F,KAAK,YAAR,kBAA7C,kBCrElB8B,EAAWC,EAAQ,IAEzB,SAASwE,IACL,IAAMhH,EAAW2B,SAASuC,eAAe,kBAAkBC,MACrD8C,EAAQtF,SAASuC,eAAe,eAAeC,MAC/CmC,EAAW3E,SAASuC,eAAe,kBAAkBC,MACrD+C,EAAcvF,SAASuC,eAAe,sBAAsBC,MAE9DmC,IAAaY,EAKdlH,EAASmH,SAAS,KACjBzC,MAAM,gDAIV,sBAAC,8BAAAvB,EAAA,sEAC6BC,MAAM,GAAD,OAAIb,EAASO,aAAb,aAAsC,CACjEO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBe,KAAMC,KAAKC,UAAU,CACjB,SAAYvE,EACZ,MAASiH,EACT,SAAYX,MATvB,cACS9B,EADT,gBAYyBA,EAAYhB,OAZrC,QAYSZ,EAZT,QAce6B,SACRC,MAAM,gDACNE,OAAO7E,SAAS8E,QAAhB,UAA2BtC,EAASuC,WAApC,YAEwB,uBAApBlC,EAAQwE,QACR1C,MAAM,gDACmB,gCAApB9B,EAAQwE,SACb1C,MAAM,qCArBjB,0CAAD,GATIA,MAAM,uCAgFC2C,ICpFXjG,EDoFWiG,EA5Cf,WACI,IAAIrH,EAAWI,aAAaM,QAAQ,YAQpC,OAPiB,OAAbV,IACAA,EAAW,IAOX,qCACI,cAAC,EAAD,CAAQA,SAAUA,IAClB,qBAAKsB,UAAU,YAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,eAAC6D,EAAA,EAAD,CAAMuB,SAVC,SAACC,GAChBA,EAAEC,iBACFC,QAAQC,IAAI,uBAQJ,UACI,eAAC3B,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,oBAAvC,UACI,cAACX,EAAA,EAAKC,MAAN,uBACA,cAACD,EAAA,EAAKY,QAAN,CAAcgB,KAAK,WAAWvB,YAAY,YAAYpE,GAAG,sBAE7D,eAAC+D,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,iBAAvC,UACI,cAACX,EAAA,EAAKC,MAAN,6BACA,cAACD,EAAA,EAAKY,QAAN,CAAcgB,KAAK,QAAQvB,YAAY,kBAAkBpE,GAAG,mBAGhE,eAAC+D,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,oBAAvC,UACI,cAACX,EAAA,EAAKC,MAAN,gCACA,cAACD,EAAA,EAAKY,QAAN,CAAcgB,KAAK,WAAWvB,YAAY,WAAWpE,GAAG,sBAE5D,eAAC+D,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,oBAAvC,UACI,cAACX,EAAA,EAAKC,MAAN,uCACA,cAACD,EAAA,EAAKY,QAAN,CAAcgB,KAAK,WAAWvB,YAAY,WAAWpE,GAAG,0BAE5D,cAAC+D,EAAA,EAAKU,MAAN,CAAYvE,UAAU,OAAOwE,UAAU,sBAEvC,cAACK,EAAA,EAAD,CAAQ9D,QAAQ,UAAU0E,KAAK,SAASX,QAASY,EAAjD,iC,QC3ElBzE,EAAWC,EAAQ,IA6HzB,SAAS8E,IACL,sBAAC,4BAAAnE,EAAA,yDAESoE,EAAQ5F,SAASuC,eAAe,eAAeC,MACrC,QAAQc,KAAKsC,GAHhC,uBAKO7C,MAAM,sCALb,0BASGtB,MAAM,GAAD,OAAIb,EAASO,aAAb,mBAA4C,CAC7CO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBe,KAAMC,KAAKC,UAAU,CACjB,MAASnE,aAAaM,QAAQ,YAC9B,KAAQiB,SAASuC,eAAe,cAAcC,MAC9C,YAAexC,SAASuC,eAAe,cAAcC,MACrD,aAAgB/D,aAAaM,QAAQ,gBAAgB8G,WACrD,MAAQ,GAAR,OAAYD,GACZ,QAAW,YAGnB7C,MAAM,iCACNE,OAAO7E,SAAS8E,QAAhB,UAA2BtC,EAASuC,WAApC,WAxBH,0CAAD,GA6BJ,SAAS2C,IACL,sBAAC,4BAAAtE,EAAA,sEAC6BC,MAAM,GAAD,OAAIb,EAASO,aAAb,eAAwC,CACnEO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBe,KAAMC,KAAKC,UAAU,CACjB,QAAWnD,EACX,aAAgBhB,aAAaM,QAAQ,gBAAgB8G,eARhE,cACShD,EADT,gBAWyBA,EAAYhB,OAXrC,cAaeiB,SACRC,MAAM,uCACNE,OAAO7E,SAAS8E,QAAhB,UAA2BtC,EAASuC,WAApC,YAEAJ,MAAM,gCAjBb,0CAAD,GA+CWgD,MAxMf,WAEI,IAAM1H,EAAWI,aAAaM,QAAQ,aAAe,GAE/CiH,EAAgB,GAJT,EAMiBjF,wBAASC,GAN1B,mBAMNC,EANM,KAMGC,EANH,KAQPC,EAAeP,EAASO,aACxBC,EAAaR,EAASQ,WAE5BG,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,sEAC2BC,MAAM,GAAD,OAAIN,EAAJ,YAA4B,CACpDO,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAJ5B,cACUC,EADV,gBAOkCA,EAASC,KAAKD,GAPhD,OAOUE,EAPV,OAQIZ,EAAWY,GARf,4CADY,uBAAC,WAAD,wBAWZC,KACD,CAACZ,EAAcC,IAvBL,MA0BWL,wBAASC,GA1BpB,mBA0BNiF,EA1BM,KA0BAC,EA1BA,KA4Bb3E,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,sEAC2BC,MAAM,GAAD,OAAIN,EAAJ,yCAAiD1C,aAAaM,QAAQ,iBAAmB,CACjH2C,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAJ5B,cACUC,EADV,gBAOkCA,EAASC,KAAKD,GAPhD,OAOUE,EAPV,OAQIoE,EAAQpE,GARZ,4CADY,uBAAC,WAAD,wBAWZC,KACD,CAACZ,EAAcC,IAElB,IA1Ca,eA0CJ+E,GAGL1G,EAAKwB,EAAUA,EAAQkF,GAAG1G,GAAK,GAE/B,IAAM2G,EAAa,GACdH,GAAOA,EAAKnD,SAAoBmD,EAAK5H,WAAa4C,EAAQkF,GAAGE,OAC9DD,EAAWzH,KAAK,cAAC6F,EAAA,EAAD,CAAQ9D,QAAQ,UAAU+D,QAAS,WA8H/D,IAAqB6B,IA9H6DrF,EAAQkF,GAAG1G,GA+HzF,sBAAC,8BAAA+B,EAAA,sEAC6BC,MAAM,GAAD,OAAIb,EAASO,aAAb,gBAAyC,CACpEO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBe,KAAMC,KAAKC,UAAU,CACjB,QAAW0D,EACX,aAAgB7H,aAAaM,QAAQ,gBAAgB8G,eARhE,cACShD,EADT,gBAWyBA,EAAYhB,OAXrC,OAWSZ,EAXT,OAaGiE,QAAQC,IAAIlE,GAERA,EAAQ6B,SACRC,MAAM,6CACNE,OAAO7E,SAAS8E,QAAhB,UAA2BtC,EAASuC,WAApC,YAEAJ,MAAM,qEAnBb,0CAAD,IA/HwB,sBAGpB,IADA,IAAMwD,EAAgB,GACbC,EAAI,EAAGA,GAAKvF,EAAUA,EAAQkF,GAAGM,QAAQC,OAAS,GAAIF,IAC3DD,EAAc5H,KACV,qCAAE,4BAAIsC,EAAQkF,GAAGM,QAAQD,KAAO,2BAKxCR,EAAcrH,KACV,eAACqD,EAAA,EAAD,WACI,eAACA,EAAA,EAAKvB,KAAN,WACI,cAACuB,EAAA,EAAKG,MAAN,UAAY,6BAAKlB,EAAUA,EAAQkF,GAAGQ,KAAO,OAC7C,eAAC3E,EAAA,EAAKI,KAAN,WACKnB,EAAUA,EAAQkF,GAAG9D,YAAc,GACpC,uBACA,cAACzD,EAAA,EAAYI,QAAb,IAHJ,cAIe,kCAAKiC,EAAUA,EAAQkF,GAAGP,MAAQ,MAAO,uBAJxD,iBAKkB,4BAAI3E,EAAUA,EAAQkF,GAAGE,MAAQ,KAAO,uBACtD,cAACzH,EAAA,EAAYI,QAAb,IACA,4CACCuH,KAEJH,KAEL,cAAC5B,EAAA,EAAD,CAAQ9D,QAAQ,UAAU+D,QAASqB,EAAnC,6BAjCHK,EAAI,EAAGA,GAAKlF,EAAUA,EAAQyF,OAAS,GAAIP,IAAM,EAAjDA,GA1CI,MAgFWpF,oBAAS,GAhFpB,mBAgFN6F,EAhFM,KAgFAC,EAhFA,KAkFPC,EAAc,kBAAMD,GAAQ,IAGlC,OACI,qCACI,cAAC,EAAD,CAAQxI,SAAUA,IAElB,eAAC0I,EAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,EAA3B,UACI,cAACC,EAAA,EAAM9I,OAAP,CAAcgJ,aAAW,EAAzB,SACI,cAACF,EAAA,EAAM5E,MAAP,oCAEJ,eAAC4E,EAAA,EAAMtG,KAAP,2FACI,cAAC7B,EAAA,EAAYI,QAAb,IACA,cAACwE,EAAA,EAAKY,QAAN,CAAcgB,KAAK,OAAOvB,YAAY,OAAOpE,GAAG,eAAe,uBAC/D,cAAC+D,EAAA,EAAKY,QAAN,CAAcgB,KAAK,OAAOvB,YAAY,eAAepE,GAAG,eAAe,uBACvE,cAAC+D,EAAA,EAAKY,QAAN,CAAcgB,KAAK,OAAOvB,YAAY,yBAAyBpE,GAAG,gBAAgB,0BAEtF,eAACsH,EAAA,EAAMG,OAAP,WACI,cAAC1C,EAAA,EAAD,CAAQ9D,QAAQ,YAAY+D,QAASqC,EAArC,uBAGA,cAACtC,EAAA,EAAD,CAAQ9D,QAAQ,UAAU+D,QAASkB,EAAnC,4BAMR,qBAAKhG,UAAU,YAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,sDACA,uMAAyK,8CACzK,cAAC6E,EAAA,EAAD,CAAQ9D,QAAQ,UAAU+D,QA9BvB,kBAAMoC,GAAQ,IA8BjB,iCACA,cAACjI,EAAA,EAAYI,QAAb,IACCgH,W,QCtGNmB,MAff,WACI,OACI,cAAC,IAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvH,IACjC,cAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,cAAcC,UAAWxG,IAC3C,cAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,oBAAoBC,UAAW/D,IACjD,cAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,SAASC,UAAWxC,IACtC,cAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,YAAYC,UAAW5B,IACzC,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,SAASC,UAAWvB,UCThDwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzH,SAASuC,eAAe,SAM1B/E,M","file":"static/js/main.e1df5750.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nfunction Header(props) {\r\n\r\n    const doLogout = props.location;\r\n    let username = props.username;\r\n\r\n    let accountPrompt = \"Ausloggen\";\r\n    let accountHref = \"/?do=logout\";\r\n    let accountOptions = []\r\n\r\n    if(doLogout === '?do=logout') {\r\n        localStorage.clear();\r\n        username = '';\r\n    }\r\n\r\n    if (username === '') {\r\n        username = \"Gast\";\r\n        accountPrompt = \"Einloggen\";\r\n        accountHref = \"/login\"\r\n    } else {\r\n        accountOptions.push(<><NavDropdown.Item href={`/user/` + localStorage.getItem('username')}>Profil</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"/account/settings\">Einstellungen</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"/races\">Wettbewerbe ansehen</NavDropdown.Item>\r\n            <NavDropdown.Divider /></>)\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Container>\r\n                <Navbar.Brand href=\"/\">traktorraces24</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/\" disabled>Rangliste</Nav.Link>\r\n                        <NavDropdown title={username} id=\"basic-nav-dropdown\">\r\n                            {accountOptions}\r\n                            <NavDropdown.Item href={accountHref}>{accountPrompt}</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","import Carousel from 'react-bootstrap/Carousel';\nimport Header from '../components/navbar';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\n\nfunction Home() {\n  let username = localStorage.getItem('username');\n  if (username === null)\n    username = '';\n\n  return (\n    <div className=\"App\">\n      <Header username={username} location={document.location.search}></Header>\n      <div className=\"container\">\n        <div className=\"col-xxl mx-auto\">\n          <Carousel>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"./images/menu/carousel1.jpg\"\n                alt=\"First slide\"\n              />\n              <Carousel.Caption>\n                <h5>Fahren sie gegen die besten Traktorfahrer Deutschlands</h5>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"./images/menu/carousel2.jpg\"\n                alt=\"Second slide\"\n              />\n              <Carousel.Caption>\n                <h5>Offizielle Rangliste</h5>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"./images/menu/carousel3.jpg\"\n                alt=\"Third slide\"\n              />\n              <Carousel.Caption>\n                <h5>Wetten sie auf ihre Favoriten</h5>\n              </Carousel.Caption>\n            </Carousel.Item>\n          </Carousel>\n          <Accordion defaultActiveKey=\"0\">\n            <Accordion.Item eventKey=\"0\">\n              <Accordion.Header>Karrieren</Accordion.Header>\n              <Accordion.Body>\n                traktorraces24 ist die groesste deutsche Traktorenrennen-Gemeinde, welche aus ueber 200.000 begeisterten Traktorfans besteht.<br></br>Die talentiertesten Rennfahrer unter uns sind auch durch unsere Wettbewerbe zu internationalen Stars geworden! Melden auch sie sich fuer eines unserer spannenden Rennen an und verpassen sie ihre Chance auf Ruhm und Ehre nicht!\n              </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"1\">\n              <Accordion.Header>Wettbewerbe</Accordion.Header>\n              <Accordion.Body>\n                Unsere Wettbewerbsangebote sind deutschlandweit verfuegbar und koennen ab 18 Jahren bestritten werden. Fuer jeden Start wird eine kleine Gebuehr von $5 verlangt, welche sie gleich bei der Anmeldung zahlen koennen. Preise und moegliche Karriereaussichten lassen sich ganz einfach in der Wettbewerbsanmeldung einsehen.\n              </Accordion.Body>\n            </Accordion.Item>\n          </Accordion>\n          <Navbar expand=\"lg\" variant=\"light\" bg=\"light\" fixed=\"bottom\">\n            <Container>\n              <Navbar.Brand href=\"#\">traktorraces24</Navbar.Brand>\n            </Container>\n          </Navbar>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import Header from \"../components/navbar\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom'\r\nconst settings = require('../api/settings.json');\r\n\r\nfunction Account(props) {\r\n\r\n    const username = localStorage.getItem('username') || '';\r\n\r\n    const [content, setContent] = useState(undefined);\r\n\r\n    const serverDomain = settings.serverDomain;\r\n    const serverPort = settings.serverPort;\r\n    const { user } = useParams();\r\n\r\n    useEffect(() => {\r\n        async function fetchSettings() {\r\n            const response = await fetch(`${serverDomain}/user/${user}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            const fetchedSettings = await response.json(response);\r\n            setContent(fetchedSettings);\r\n        }\r\n        fetchSettings();\r\n    }, [serverDomain, serverPort, user])\r\n\r\n    return (\r\n        <>\r\n            <Header username={username}></Header>\r\n            <div className=\"container\">\r\n                <div className=\"col-xxl-9 mx-auto\">\r\n                    <Card >\r\n                        <Card.Img variant=\"top\" src={content ? content.avatar : '/images/menu/carousel3.jpg'} />\r\n                        <Card.Body>\r\n                            <Card.Title>@{content ? content.username : ''}</Card.Title>\r\n                            <Card.Text>\r\n                                {content ? content.description : ''}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Account;","import Header from \"../components/navbar\";\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useEffect, useState } from \"react\";\r\nconst settings = require('../api/settings.json');\r\n\r\nfunction saveSettings() {\r\n    const description = document.getElementById('input-description').value;\r\n    const avatar = document.getElementById('input-url').value;\r\n    const sessionToken = localStorage.getItem('sessionToken');\r\n\r\n    (async () => {\r\n        const rawResponse = await fetch(`${settings.serverDomain}/@me/settings`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"sessionToken\": sessionToken,\r\n                \"description\": description,\r\n                \"avatarUrl\": avatar\r\n            })\r\n        });\r\n        const content = await rawResponse.json();\r\n\r\n        if (content.success) {\r\n            alert('Einstellungen erfolgreich gespeichert!')\r\n            localStorage.removeItem('credits');\r\n            window.location.replace(`${settings.siteDomain}/account/settings`);\r\n        } else {\r\n            alert('Oops, irgendetwas ist schiefgelaufen.')\r\n        }\r\n    })();\r\n}\r\n\r\nfunction addCredits() {\r\n    const balance = document.getElementById('input-credits').value;\r\n    const sessionToken = localStorage.getItem('sessionToken');\r\n\r\n    const isValid = /^\\d+$/.test(balance);\r\n    if (!isValid) {\r\n        alert('Guthaben darf nur Zahlen enthalten');\r\n        return;\r\n    }\r\n\r\n    (async () => {\r\n        const rawResponse = await fetch(`${settings.serverDomain}/@me/settings`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"sessionToken\": sessionToken,\r\n                \"balance\": balance\r\n            })\r\n        });\r\n        const content = await rawResponse.json();\r\n\r\n        if (content.success) {\r\n            alert('Credits hinzugefuegt!')\r\n            localStorage.removeItem('credits');\r\n            window.location.replace(`${settings.siteDomain}/account/settings`);\r\n        } else {\r\n            alert('Oops, irgendetwas ist schiefgelaufen.')\r\n        }\r\n    })();\r\n}\r\n\r\nfunction Settings() {\r\n    const username = localStorage.getItem('username') || '';\r\n\r\n    const [content, setContent] = useState(undefined);\r\n\r\n    const serverDomain = settings.serverDomain;\r\n    const serverPort = settings.serverPort;\r\n    const sessionToken = localStorage.getItem('sessionToken');\r\n\r\n    useEffect(() => {\r\n        async function fetchSettings() {\r\n            const response = await fetch(`${serverDomain}/@me/settings?sessionToken=${sessionToken}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            const fetchedSettings = await response.json(response);\r\n            setContent(fetchedSettings);\r\n        }\r\n        fetchSettings();\r\n    }, [serverDomain, serverPort, sessionToken])\r\n\r\n    return (\r\n        <>\r\n            <Header username={username}></Header>\r\n            <div className=\"container\">\r\n                <div className=\"col-lg-4 mx-auto\">\r\n                    <Form.Label htmlFor=\"basic-url\"><h1><b>Einstellungen</b></h1></Form.Label>\r\n                    <NavDropdown.Divider />\r\n                    <Form.Label htmlFor=\"basic-url\">Dein Nutzername</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                            placeholder=\"Nutzername\"\r\n                            aria-label=\"Username\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            defaultValue={content ? content.details.username : ''}\r\n                            disabled\r\n                        />\r\n                    </InputGroup>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Profil-Beschreibung</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Deine Profil-Beschreibung\" id=\"input-description\" defaultValue={content ? content.details.description : ''}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Profilbild URL</Form.Label>\r\n                        <Form.Control rows={1} placeholder=\"https://example.com/picture.png\" id=\"input-url\" defaultValue={content ? content.details.url : ''}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" onClick={saveSettings}>Speichern</Button>\r\n                    <NavDropdown.Divider />\r\n                    <Form.Label><h3><b>Guthaben</b></h3></Form.Label>\r\n                    <InputGroup.Text>Aktuell: ${content ? content.details.balance : ''}</InputGroup.Text>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        <FormControl aria-label=\"Dollar amount (with dot and two decimal places)\" id=\"input-credits\" />\r\n                        <Button variant=\"dark\" onClick={addCredits}>Aufladen</Button>\r\n                    </InputGroup>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Settings;","import Header from \"../components/navbar\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nconst settings = require('../api/settings.json');\r\n\r\nfunction sendLogin() {\r\n    const username = document.getElementById('input-username').value;\r\n    const password = document.getElementById('input-password').value;\r\n\r\n    if (username === '') {\r\n        alert('Alle Felder muessen ausgefuellt sein.')\r\n    }\r\n\r\n    (async () => {\r\n        const rawResponse = await fetch(`${settings.serverDomain}/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": username,\r\n                \"password\": password\r\n            })\r\n        });\r\n        const content = await rawResponse.json();\r\n\r\n        if (content.success) {\r\n            alert('Sie haben sich erfolgreich eingeloggt!')\r\n            localStorage.clear();\r\n\r\n            localStorage.setItem('sessionToken', content.sessionKey);\r\n            localStorage.setItem('username', username);\r\n            window.location.replace(`${settings.siteDomain}/`);\r\n        } else {\r\n            alert('Die angegebenen Daten sind inkorrekt.')\r\n        }\r\n        return;\r\n    })();\r\n    return\r\n}\r\n\r\nfunction Login() {\r\n\r\n    let username = localStorage.getItem('username');\r\n    if (username === null)\r\n        username = '';\r\n\r\n    var handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Event: Form Submit');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header username={username}></Header>\r\n            <div className=\"container\">\r\n                <div className=\"col-lg-4 mx-auto\">\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Nutzername</Form.Label>\r\n                            <Form.Control type=\"username\" placeholder=\"joeMama69\" id=\"input-username\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Passwort</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Passwort\" id=\"input-password\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={sendLogin}>\r\n                            Login\r\n                        </Button>\r\n                        <p>Sie besitzen noch kein Konto? Klicken sie <a href=\"/register\">hier</a>!</p>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","import Header from \"../components/navbar\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nconst settings = require('../api/settings.json');\r\n\r\nfunction createAccount() {\r\n    const username = document.getElementById('input-username').value;\r\n    const email = document.getElementById('input-email').value;\r\n    const password = document.getElementById('input-password').value;\r\n    const passwordAlt = document.getElementById('input-password-alt').value;\r\n\r\n    if (password !== passwordAlt) {\r\n        alert('Passwoerter stimmen nicht ueberein.')\r\n        return;\r\n    }\r\n\r\n    if(username.includes(' ')) {\r\n        alert('Nutzername darf keine leerzeichen enthalten.')\r\n        return;\r\n    }\r\n\r\n    (async () => {\r\n        const rawResponse = await fetch(`${settings.serverDomain}/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": username,\r\n                \"email\": email,\r\n                \"password\": password\r\n            })\r\n        });\r\n        const content = await rawResponse.json();\r\n\r\n        if (content.success) {\r\n            alert('Sie haben ihr Konto erfolgreich registriert!')\r\n            window.location.replace(`${settings.siteDomain}/login`);\r\n        } else {\r\n            if (content.message === 'already registered')\r\n                alert('Diese Anmeldedaten werden bereits verwendet.')\r\n            else if (content.message === 'credentials cannot be empty')\r\n                alert('Felder duerfen nicht leer bleiben')\r\n        }\r\n    })();\r\n\r\n}\r\n\r\nfunction Register() {\r\n    let username = localStorage.getItem('username');\r\n    if (username === null)\r\n        username = '';\r\n        var handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            console.log('Event: Form Submit');\r\n        };\r\n\r\n    return (\r\n        <>\r\n            <Header username={username}></Header>\r\n            <div className=\"container\">\r\n                <div className=\"col-lg-4 mx-auto\">\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"username\" placeholder=\"joeMama69\" id=\"input-username\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>E-Mail Adresse</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"joe@example.com\" id=\"input-email\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Passwort eingeben</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Passwort\" id=\"input-password\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Passwort erneut eingeben</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Passwort\" id=\"input-password-alt\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={createAccount}>\r\n                            Register\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;","import Header from \"../components/navbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nconst settings = require('../api/settings.json');\r\nvar id;\r\n\r\nfunction Races() {\r\n\r\n    const username = localStorage.getItem('username') || '';\r\n\r\n    const listOfMatches = [];\r\n\r\n    const [content, setContent] = useState(undefined);\r\n\r\n    const serverDomain = settings.serverDomain;\r\n    const serverPort = settings.serverPort;\r\n\r\n    useEffect(() => {\r\n        async function fetchSettings() {\r\n            const response = await fetch(`${serverDomain}/matches`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            const fetchedSettings = await response.json(response);\r\n            setContent(fetchedSettings);\r\n        }\r\n        fetchSettings();\r\n    }, [serverDomain, serverPort])\r\n\r\n\r\n    const [auth, setAuth] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        async function fetchSettings() {\r\n            const response = await fetch(`${serverDomain}/confirmIdentity?sessionToken=${localStorage.getItem('sessionToken')}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            const fetchedSettings = await response.json(response);\r\n            setAuth(fetchedSettings);\r\n        }\r\n        fetchSettings();\r\n    }, [serverDomain, serverPort])\r\n\r\n    for (let i = 0; i < (content ? content.length : 0); i++) {\r\n\r\n        \r\n        id = content ? content[i].id : '';\r\n\r\n        const startMatch = [];\r\n        if ((auth ? auth.success : false) && auth.username === content[i].owner)\r\n            startMatch.push(<Button variant=\"primary\" onClick={() => {launchMatch(content[i].id)}}>Starten</Button>)\r\n\r\n        const participators = [];\r\n        for (let x = 0; x < (content ? content[i].players.length : 0); x++) {\r\n            participators.push(\r\n                <><b>{content[i].players[x]}</b><br></br></>\r\n            )\r\n        }\r\n\r\n\r\n        listOfMatches.push(\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title><h2>{content ? content[i].name : ''}</h2></Card.Title>\r\n                    <Card.Text>\r\n                        {content ? content[i].description : ''}\r\n                        <br></br>\r\n                        <NavDropdown.Divider />\r\n                        Preisgeld: <b>${content ? content[i].price : ''}</b><br></br>\r\n                        Veranstalter: <b>{content ? content[i].owner : ''}</b><br></br>\r\n                        <NavDropdown.Divider />\r\n                        <h5>Teilnehmer</h5>\r\n                        {participators}\r\n                    </Card.Text>\r\n                    {startMatch}\r\n                </Card.Body>\r\n                <Button variant=\"primary\" onClick={joinMatch}>Teilnehmen</Button>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Header username={username}></Header>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Wettbewerb anmelden</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Bitte fuelle die folgenden Informationen aus, um einen Wettbewerb anzumelden!\r\n                    <NavDropdown.Divider />\r\n                    <Form.Control type=\"text\" placeholder=\"Name\" id=\"match-name\" /><br></br>\r\n                    <Form.Control type=\"text\" placeholder=\"Beschreibung\" id=\"match-desc\" /><br></br>\r\n                    <Form.Control type=\"text\" placeholder=\"Preisgeld (nur Zahlen)\" id=\"match-creds\" /><br></br>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Abbrechen\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={createMatch}>\r\n                        Anmelden\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"col-md mx-auto\">\r\n                    <h2>Aktuelle Wettbewerbe</h2>\r\n                    <p>Hier koennen sie eine vollstaendige Liste aller aktuellen Wettbewerbe einsehen. Um einem Wettbewerb beizutreten, melden Sie sich bitte an und druecken sie danach auf <b>Teilnehmen</b></p>\r\n                    <Button variant=\"success\" onClick={handleShow}>Wettbewerb anmelden</Button>\r\n                    <NavDropdown.Divider />\r\n                    {listOfMatches}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction createMatch() {\r\n    (async () => {\r\n\r\n        const price = document.getElementById('match-creds').value;\r\n        const isValid = /^\\d+$/.test(price);\r\n        if (!isValid) {\r\n            alert('Guthaben darf nur Zahlen enthalten');\r\n            return;\r\n        }\r\n\r\n        fetch(`${settings.serverDomain}/matches/create`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"owner\": localStorage.getItem('username'),\r\n                \"name\": document.getElementById('match-name').value,\r\n                \"description\": document.getElementById('match-desc').value,\r\n                \"sessionToken\": localStorage.getItem('sessionToken').toString(),\r\n                \"price\": `${price}`,\r\n                \"privacy\": \"false\"\r\n            })\r\n        });\r\n        alert('Wettbewerb wurde eingestellt!')\r\n        window.location.replace(`${settings.siteDomain}/races`);\r\n\r\n    })();\r\n}\r\n\r\nfunction joinMatch() {\r\n    (async () => {\r\n        const rawResponse = await fetch(`${settings.serverDomain}/match/join`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"matchId\": id,\r\n                \"sessionToken\": localStorage.getItem('sessionToken').toString()\r\n            })\r\n        });\r\n        const content = await rawResponse.json();\r\n\r\n        if (content.success) {\r\n            alert('Sie wurden erfolgreich eingetragen!')\r\n            window.location.replace(`${settings.siteDomain}/races`);\r\n        } else {\r\n            alert('Du bist bereits eingetragen.')\r\n        }\r\n    })();\r\n}\r\n\r\nfunction launchMatch(matchId) {\r\n    (async () => {\r\n        const rawResponse = await fetch(`${settings.serverDomain}/match/start`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"matchId\": matchId,\r\n                \"sessionToken\": localStorage.getItem('sessionToken').toString()\r\n            })\r\n        });\r\n        const content = await rawResponse.json();\r\n\r\n        console.log(content)\r\n\r\n        if (content.success) {\r\n            alert('Der Wettbewerb wurde erfolgreich beendet!')\r\n            window.location.replace(`${settings.siteDomain}/races`);\r\n        } else {\r\n            alert('Irgendetwas ist schiefgelaufen. Bitte versuche es spaeter erneut.')\r\n        }\r\n    })();\r\n}\r\n\r\nexport default Races;","import Home from './sites/home';\r\nimport Account from './sites/account.js'\r\nimport Settings from './sites/settings';\r\nimport Login from './sites/login';\r\nimport Register from './sites/register';\r\nimport Races from './sites/races';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={Home}/>\r\n          <Route exact path='/user/:user' component={Account}/>\r\n          <Route exact path='/account/settings' component={Settings}/>\r\n          <Route exact path='/login' component={Login}/>\r\n          <Route exact path='/register' component={Register}/>\r\n          <Route exact path='/races' component={Races}/>\r\n        </Switch>\r\n      </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}